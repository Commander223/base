#!/bin/bash


function register_usage {
  echo -----------------------------------------------------------------------
  echo Usage: Registers the template debian pkg with the site template registry
  echo
  echo "        "subutai register template
  echo
  echo -----------------------------------------------------------------------
}


# Plan for registering a template
# -----------------------------------------------------------------------------
# (1) perform sanity checks first
#     - defer exports of master to the subutai-master-export script
#     - template container MUST exist
#     - container MUST be a template with the '@template' snapshot
#     - container parent MUST be present in the template registry
# (2) generate delta images of all filesystems: 
#     'pool/parent-partition@child' -> 'pool/child-partition@template'
# (3) generate the debian file deltas, and package info

function register {
  if [ "$SUBUTAI_OFFLINE_MODE" == "true" ]; then
    msg_error "Register cannot be used in SUBUTAI_OFFLINE_MODE! Aborting..."
    exit 1
  fi

  if [ "`is_system_locked`" == "true" ]
  then
     msg_error "System locked by a subutai process"
     exit 1
  fi

  local container="$1"

  ps aux | grep "subutai register $container" | grep -v $$ \
         | grep -v "grep subutai" | grep -v "grep --color" > /dev/null 2>&1
  if [ $? == 0 ]
  then
    msg_error "Container \"$container\" is being registered by other process!"
    exit 1
  fi

  if [ "`are_containers_readable $container`" == "true" ]
  then
     msg_error "Container(s) locked by a subutai process"
     exit 1
  fi

  lock_container_write $container
  if [ $? != 0 ]; then msg_error "Containers cannot be locked!"; exit 1; fi

  # ----------------------------------------------------------------------------
  # (1) perform some sanity checks
  # ----------------------------------------------------------------------------

  lxc_assert $container "`usage`"

  local debian_package_name=`get_debian_package_name $container`
  local debian_file="$SUBUTAI_TMPDIR/$debian_package_name.deb"

  if [ ! -f $debian_file ]; then
    msg_error "It seems the debian file has not been generated"
    msg_error "Please invoke export $container first"
    unlock_container_write $container
    if [ $? != 0 ]; then msg_error "Container(s) cannot be unlocked!"; exit 1; fi
    exit 1
  fi
  # check to make sure the container is a template
  if [ "`fs_is_template $container`" == "false" ]; then
    msg_error "Container \"$container\" is NOT a template. Aborting ..."
    unlock_container_write $container
    if [ $? != 0 ]; then msg_error "Container(s) cannot be unlocked!"; exit 1; fi
    exit 1
  else
    msg_info "    - check passed: \"$container\" is a template"
  fi
  # check to make sure container is NOT registered as a template
  if [ "`is_registered $container`" == "true" ]; then
    msg_error "Container \"$container\" is registered as template already. Aborting ..."
    unlock_container_write $container
    if [ $? != 0 ]; then msg_error "Container(s) cannot be unlocked!"; exit 1; fi
    exit 1
    else
    msg_info "    - check passed: \"$container\" is not registered"
  fi

  parent=`fs_get_parent $container`
  lxc_assert $parent
  # check to make sure the parent is a template
  if [ "`fs_is_template $parent`" == "false" ]; then
    msg_error "Parent \"$parent\" is NOT a template. Aborting ..."
    unlock_container_write $container
    if [ $? != 0 ]; then msg_error "Container(s) cannot be unlocked!"; exit 1; fi
    exit 1
  else
    msg_info "    - check passed: parent \"$parent\" is a template"
  fi

  # check to make sure the parent is registered if container itself is not master
  if [ $container != "master" -a "`is_registered $parent`" == "false" ]; then
    msg_error "Parent \"$parent\" is NOT registered. Aborting ..."
    unlock_container_write $container
    if [ $? != 0 ]; then msg_error "Container(s) cannot be unlocked!"; exit 1; fi
    exit 1
  elif [ $container != "master" ]; then
    msg_info "    - check passed: parent \"$parent\" is registered"
  fi

  # ----------------------------------------------------------------------------
  # (2) Publish the template which has the debian package under $SUBUTAI_TMPDIR 
  # ----------------------------------------------------------------------------
  
  # push to the subutai site git repository if defined
  if [ -n "$SUBUTAI_SITE_GIT" ]; then
    git_remote_push $container
  fi

  debian_root="$SUBUTAI_TMPDIR/$container"
  pkg="`cat /var/lib/lxc/$container/config | \
     grep subutai.template.package | awk '{print $3}'`"
  
  send_n_register $pkg $SUBUTAI_TMPDIR/$container 
 
  if [ "`is_registered $container`" == "true" ]; then
    notify_template_import $container
  fi
 
  unlock_container_write $container
  if [ $? != 0 ]; then msg_error "Container(s) cannot be unlocked!"; exit 1; fi
}


function register_description {
  echo registers the template with the site registry
}


