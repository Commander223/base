#!/bin/bash

export EC2_HOME=/main/awsdeploy/ec2-api-tools-1.7.5.1
export PATH=$PATH:$EC2_HOME/bin
export JAVA_HOME="/apps/subutai-mng/current/java/jre/"

AWS_A_KEY=<aws_account>
AWS_S_KEY=<aws_password>
KEY="snappy"
AMI="ami-0e959813"
REGION="eu-central-1"
N2N_SUPERNODE_IP="127.0.0.1"
N2N_SUPERNODE_PORT="5000"
N2N_COMM="awscom1"
N2N_DEV="n2n_dev1"
N2N_IP="10.177.1.1"
N2N_PASS="secret"
TUNNEL="tunnel22"
VXLAN_IP="10.177.1.2"
NEW_HOSTNAME=py"`date +%N`"

while [ $# -ge 1 ]; do
	key="$1"

	case $key in
		-O)
		AWS_A_KEY="$2"
		;;
		-W)
		AWS_S_KEY="$2"
		;;
		-i)
		N2N_IP="$2"
		;;
		-s)
		N2N_PASS="$2"
		;;
		-p)
		N2N_SUPERNODE_PORT="$2"
		;;
		-n)
		N2N_COMM="$2"
		;;
		-k)
		KEY="$2"
		;;
		-a)
		AMI="$2"
		;;
		-r)
		REGION="$2"
		;;
		-t)
		TUNNEL="$2"
		;;
	esac
	shift
done

set -o errexit

function keygen_rsa {
	echo "Generating RSA keys..."
	ssh-keygen -t rsa -f ~/.ssh/$KEY -q -N ""
	ec2-import-keypair --region=$REGION -f ~/.ssh/$KEY.pub $KEY \
	-O $AWS_A_KEY -W $AWS_S_KEY
}

function create_instance {
	echo "Creating instance..."
	iname=$(ec2-run-instances $AMI --region $REGION --key $KEY \
		--instance-type t2.micro \
		--user-data-file /main/awsdeploy/cloud.cfg \
		-O $AWS_A_KEY -W $AWS_S_KEY | grep INSTANCE | awk -F" " '{print $2}')
	echo "AWS instance ID: $iname"
	sleep 5
	IP=$(ec2-describe-instances $iname --region $REGION \
	-O $AWS_A_KEY -W $AWS_S_KEY | grep NICASSOCIATION | awk -F" " '{print $2 }')
	echo "AWS instance IP: $IP"
}

function wait_ip {
	while ! ping -c1 $IP &>/dev/null; do
		echo "Waiting for IP $IP is accessible...";
	done
	echo "Waiting for ssh port of $IP..."
	sleep 10
	ssh-keyscan -H $IP  >> ~/.ssh/known_hosts && sleep 1
}

function create_connection {
	echo "Creating n2n connection..."
	ssh -i ~/.ssh/$KEY ubuntu@$IP "sudo /home/ubuntu/init_clean.sh &>/dev/null"
	ssh -i ~/.ssh/$KEY ubuntu@$IP "sudo subutai management_network -N $N2N_SUPERNODE_IP $N2N_SUPERNODE_PORT $N2N_DEV $N2N_COMM $N2N_IP string $N2N_PASS &>/dev/null"
	sudo subutai management_network -N $IP $N2N_SUPERNODE_PORT $N2N_DEV $N2N_COMM $VXLAN_IP string $N2N_PASS &>/dev/null
	echo "Creating VXLAN tunnel..."
	ssh -i ~/.ssh/$KEY ubuntu@$IP "sudo subutai management_network -c $TUNNEL $VXLAN_IP vxlan &>/dev/null"
	sudo subutai management_network -c $TUNNEL $N2N_IP vxlan &>/dev/null
	echo "Waiting for IP address from Management Host..."
	ssh -i ~/.ssh/$KEY ubuntu@$IP "sudo dhclient br-int"
}

function set_hostname {
	echo "Setting hostname..."
	ssh -i ~/.ssh/$KEY ubuntu@$IP "sudo bash -c 'echo $NEW_HOSTNAME > /writable/system-data/etc/writable/hostname'"
	ssh -i ~/.ssh/$KEY ubuntu@$IP "sudo /bin/hostname $NEW_HOSTNAME"
}

function generate_gpg {
	echo "Generating GPG keys..."
	ssh -i ~/.ssh/$KEY ubuntu@$IP "sudo /home/ubuntu/gpg_gen"
	ssh -i ~/.ssh/$KEY ubuntu@$IP "sudo mv /home/ubuntu/.gnupg* /root/.gnupg"
}

function add_tag {
	stamp=$(date +%N)
	ec2addtag $iname --tag Name=TEST-RH_AWS_$stamp --region $REGION \
	-O $AWS_A_KEY -W $AWS_S_KEY
}

keygen_rsa
create_instance
wait_ip
create_connection
set_hostname
generate_gpg
add_tag

echo "Done"
echo "To terminate the instance run:"
echo "ec2-terminate-instances $iname --region $REGION -O $AWS_A_KEY -W $AWS_S_KEY "
