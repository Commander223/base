#!/bin/bash

. $subutai_lib_base/net_ops

function network_usage {
echo --------------------------------------------------------------------------
echo
echo Usage:   Assign Environment IP and VLAN ID of Container
echo "        "subutai \[-qh\] network CONTAINER -a IPADDRESS/NETMASK VLANID
echo
echo Usage:   Modify Environment IP and VLAN ID of Container
echo "        "subutai \[-qh\] network CONTAINER -m IPADDRESS/NETMASK VLANID
echo
echo Usage:   Remove Environment IP and VLAN ID of Container
echo "        "subutai \[-qh\] network CONTAINER -r
echo
echo Usage:   List Environment IP and VLAN ID of Container
echo "        "subutai \[-qh\] network CONTAINER -l
echo
echo Usage:   Help For Network
echo "        "subutai \[-qh\] network -h 
echo
echo --------------------------------------------------------------------------
}

function network {
  #Parse provided arguments
  local assign="false"
  local modify="false"
  local remove="false"
  local list="false"
  local container="$1"
  local ipAddress="$3"
  local vlanID="$4"
  local extra="$5"
  local config=/var/lib/lxc/$container/config

  if [ "$1" == "-h" ]
  then
    show_usage "`network_usage`"
  fi

  lxc_assert "$container" "`network_usage`"
  if [ "$2" != "-a" ] && [ "$2" != "-m" ] && [ "$2" != "-r" ] && [ "$2" != "-l" ]
  then
     msg_error "Error Getting Options. Aborting..."
     show_usage "`network_usage`"
  fi
  OPTIND=0
  shift
  shift_amount=0;
  while getopts ":amrlh" opt; do
    case $opt in
      a)
        assign="true"
        net_check_parameters $ipAddress $vlanID $extra
	net_check_ip_vlan_validation $ipAddress $vlanID
        ;;
      m)
        modify="true"
        net_check_parameters $ipAddress $vlanID $extra
	net_check_ip_vlan_validation $ipAddress $vlanID
        ;;
      r)
        remove="true"
        ;;
      l)
        list="true"
        ;;
      \?)
        msg_error "Unrecognized option -$OPTARG"
        exit 1
        ;;
    esac
    shift_amount=$(($shift_amount + 1))
  done

  #Environment IP and VLAN ID Assignment Procedure
  if [ $assign == "true" ]; then
    if [ "`cat $config | grep "lxc.network.ipv4"`" ] || [ "`cat $config | grep "#vlan_id"`" ]
    then
     msg_error "Environment IP or Vlan ID already set. Aborting..."
     exit 1
    fi
    sed -i '/-2/a lxc.network.ipv4 = '$ipAddress'' $config
    echo "#vlan_id = $vlanID"  >> $config
    # get macaddress_of_container to initialize ovs bridges' name
    macaddress_of_container=`cat $config | grep lxc.network.hwaddr | cut -d "=" -f 2 | tr -d ' '`
    #Remove ':' characters from macaddress to initialize ovs_bridges
    ovs_port_name=`echo $macaddress_of_container | tr -d ':'`
    net_update_networking $container $ovs_port_name $ipAddress $vlanID 
    msg_ok "Environment IP and VLAN ID Assignment Done."

  #Environment IP and VLAN ID Modify Procedure
  elif [ $modify == "true" ]; then
    if [ -z "`cat $config | grep "lxc.network.ipv4"`" ] || [ -z "`cat $config | grep "#vlan_id"`" ]
    then
     msg_error "Environment IP or Vlan ID not set. Aborting..."
     exit 1
    fi
    sed -i '/lxc.network.ipv4/c\lxc.network.ipv4 = '$ipAddress'' $config
    sed -i '/#vlan_id/c\#vlan_id = '$vlanID'' $config
    # get macaddress_of_container to initialize ovs bridges' name
    macaddress_of_container=`cat $config | grep lxc.network.hwaddr | cut -d "=" -f 2 | tr -d ' '`
    #Remove ':' characters from macaddress to initialize ovs_bridges
    ovs_port_name=`echo $macaddress_of_container | tr -d ':'`
    net_update_networking $container $ovs_port_name $ipAddress $vlanID 
    msg_ok "Environment IP and VLAN ID Editing Done."

    #Environment IP and VLAN ID Remove Procedure
  elif [ $remove == "true" ]; then
    if [ "$ipAddress" ]; then
      msg_error "Extra Argument Detected. Aborting ..."
      show_usage "`network_usage`"
    fi
    if [ -z "`cat $config | grep "lxc.network.ipv4"`" ] || [ -z "`cat $config | grep "#vlan_id"`" ]
    then
     msg_error "Environment IP or Vlan ID not set. Aborting..."
     exit 1
    fi
    # get macaddress_of_container to initialize ovs bridges' name
    macaddress_of_container=`cat $config | grep lxc.network.hwaddr | cut -d "=" -f 2 | tr -d ' '`
    #Remove ':' characters from macaddress to initialize ovs_bridges
    ovs_port_name=`echo $macaddress_of_container | tr -d ':'`
    vlan_id="`cat $config | grep "#vlan_id" | cut -d " " -f3`"
    ovs-vsctl remove port $ovs_port_name-2 tag $vlan_id > /dev/null 2>&1
    lxc-attach -n $container -- ifconfig eth1 0 > /dev/null 2>&1
    sed -i '/lxc.network.ipv4/d' $config
    sed -i '/#vlan_id/d' $config
    msg_ok "Environment IP and VLAN ID Removing Done."

  #Environment IP and VLAN ID List Procedure
  elif [ $list == "true" ]; then
    if [ "$ipAddress" ]; then
      msg_error "Extra Argument Detected. Aborting ..."
      show_usage "`network_usage`"
    fi
    echo "Environment IP: " `cat $config | grep "lxc.network.ipv4" | cut -d " " -f3`
    echo "Vlan ID: " `cat $config | grep "#vlan_id" | cut -d " " -f3`
    msg_ok "Environment IP and VLAN ID."
  fi
}

function network_description {
  echo "Establish a tunnel between subutai peers"
}

