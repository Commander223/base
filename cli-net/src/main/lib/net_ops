#!/bin/bash

# ==========================================================================
# Set of functions that contains related functionality of network bindings
# ==========================================================================

function net_check_ip_vlan_validation {
  local ipcheck="^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([0-9]\
|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
  local ip="`echo $1 | cut -d "/" -f1`"
  local netmask="`echo $1 | cut -d "/" -f2`"
  if [[ $2 =~ ^-?[0-9]+$ ]]; then
    msg_info "Vlan ID: OK"
  else
    msg_error "Invalid Vlan ID: $vlanID. Aborting..."
    show_usage "`network_usage`"
  fi
  echo $ip | grep -w -E -o $ipcheck > /dev/null 2>&1
  if [ $? -eq 0 ]; then
    msg_info "IP Address: OK"
    if [[ $netmask =~ ^-?[0-9]+$ ]] && [ $netmask -lt 32 ] ; then
      msg_info "Netmask: OK"
      break
    else
      msg_error "Invalid IP Netmask: $netmask. Aborting..."
      show_usage "`network_usage`"
    fi
  else
    msg_error "Invalid IP Address: $ip. Aborting..."
    show_usage "`network_usage`"
  fi
}

function net_check_parameters {
  if [ -z "$1" ]; then
      msg_error "IP ADDRESS Parameter not provided. Aborting ..."
      show_usage "`network_usage`"
  fi
  if [ -z "$2" ]; then
      msg_error "VLAN ID Parameter not provided. Aborting ..."
      show_usage "`network_usage`"
  fi
  if [ "$3" ]; then
      msg_error "Extra Argument Detected. Aborting ..."
      show_usage "`network_usage`"
  fi
}

function net_update_networking {
  ovs-vsctl set port $2-2 tag=$4 > /dev/null 2>&1
  lxc-attach -n $1 -- ifconfig eth1 $3 > /dev/null 2>&1
}

function getgw {
local ip="`echo $1 | awk -F'/' '{print $1}'`"
local cidr="`echo $1 | awk -F'/' '{print $2}'`"
local mask=""
local oct1=$(($cidr/8))
local oct2=$(($cidr%8))

for ((i=0;i<4;i+=1)); do
  if [ $i -lt $oct1 ]; then
    mask+=255
  elif [ $i -eq $oct1 ]; then
    mask+=$((256 - 2**(8-$oct2)))
  else
    mask+=0
  fi
  test $i -lt 3 && mask+=.
done

IFS=. read -r i1 i2 i3 i4 <<< "$ip"
IFS=. read -r m1 m2 m3 m4 <<< "$mask"

printf "%d.%d.%d.%d\n" "$((i1 & m1))" "$((i2 & m2))" "$((i3 & m3))" "$(( (i4 & m4) + 1))"
}

