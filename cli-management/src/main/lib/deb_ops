#!/bin/bash

# ==========================================================================
# Set of functions that operates on debian packages
# ==========================================================================

SUBUTAI_REPO_DIR="/repo/ksks"
SUBUTAI_TMPDIR="/tmp"
SUBUTAI_REMOVED_PACKAGES_DIR="/var/lib/subutai/removed-packages/"


function add_package {
  local file_path=$1
  assert_file "$file_path"
  # extract debian package name from full path
  local debian_package=$(echo $file_path | sed 's/.*\///')
  assert_debian_package "$debian_package"
  
  pushd $SUBUTAI_REPO_DIR > /dev/null
  # Copy file under custom package directory
  cp -a "$file_path" "$SUBUTAI_REPO_DIR/amd64/trusty/"
  # Add file to the apt repository
  reprepro includedeb trusty amd64/trusty/$debian_package
  popd > /dev/null
}


function remove_package {
  local package_control_name=$1
  local debian_package=$package_control_name"_*.deb"
  local file_path=$SUBUTAI_REPO_DIR/amd64/trusty/$debian_package
  assert_file "$file_path"
  assert_debian_package "$debian_package"

  # Remove file under custom package directory
  mkdir -p "$SUBUTAI_REMOVED_PACKAGES_DIR"
  mv $file_path $SUBUTAI_REMOVED_PACKAGES_DIR
  pushd $SUBUTAI_REPO_DIR > /dev/null
  # Remove file from the apt repository
  reprepro remove trusty $package_control_name
  popd > /dev/null
}


function extract_package {
  local debian_package=$1
  assert_debian_package "$debian_package"
  local file_path="$SUBUTAI_REPO_DIR/amd64/trusty/$debian_package"
  assert_file "$file_path"

  pushd $SUBUTAI_TMPDIR > /dev/null
  # If the debian package arguement is provided with wilcards,
  # then get the full package name
  full_package_name=$(ls $file_path | sed 's/.*\///')
  local extract_directory_name=${full_package_name:0:$((${#full_package_name} - 4))}
  # delete directory if exists
  rm -r "$SUBUTAI_TMPDIR/$extract_directory_name"
  # extract the package under $SUBUTAI_TMPDIR
  dpkg -x $file_path "$SUBUTAI_TMPDIR/$extract_directory_name"
  dpkg -e $file_path "$SUBUTAI_TMPDIR/$extract_directory_name/DEBIAN/"
  popd > /dev/null
}


function list_package {
  search_pattern=$1
  if [ -z $search_pattern ]; then
    msg_error "Search pattern is not provided. Aborting!"
    exit 1
  fi

  echo "$(apt-cache search $search_pattern)"
}


function assert_file {
  local file=$1
  if [ -z $file ]; then
    msg_error "File name cannot be empty"
    exit 1
  fi

  if [ ! -f $file ]; then
    msg_error "File $file does not exist."
    exit 1
  fi
}


function assert_debian_package {
  local file=$1
  if [ -z $file ]; then
    msg_error "Package name cannot be empty"
    exit 1
  fi

  if [[ $file != *.deb ]]
  then
    msg_error "$file is not a debian package!"
    exit 1
  fi
}


function get_package_control_name {
  local debian_package=$1
  if [ -z $debian_package ]; then
    msg_error "Package name cannot be empty"
    exit 1
  fi

  if [[ $debian_package == *\/* ]]; then
    msg_error "Package name should not contain \/ character"
    exit 1
  fi

  echo $debian_package | cut -f1 -d"_"
}
