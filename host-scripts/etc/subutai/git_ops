#!/bin/bash

# --------------------------------------------------------------------------
# Bunch-O GIT convenience operations
# --------------------------------------------------------------------------

. /etc/subutai/config
. /etc/subutai/bsfl
init


function git_master_uuid {
  pushd . > /dev/null
  cd /var/lib/lxc/master/rootfs
  git log | grep commit | head -n 1 | awk '{print $2}'
  popd > /dev/null
}


function git_init_master {
  local home=/var/lib/lxc/master
  local config=$home/config

  pushd . > /dev/null
  cd $home/rootfs
  git init
  git config user.email "$SUBUTAI_EMAIL"
  git config user.name  "$SUBUTAI_USER"
  cp /etc/subutai/gitignore ./.gitignore
  git add ./.gitignore
  git commit -m 'ignoring some files at root'
  git add -A
  git commit -m 'initial master /etc import'
  local uuid=`git_master_uuid`
  echo subutai.git.uuid = $uuid >> $config
  popd > /dev/null
}


function git_child_branch {
  local child="$1"

  if [ -z `lxc-ls --running $child` ]; then
    lxc-start -d -n $child
  fi

  lxc-wait -n $child -s RUNNING
  o=`lxc-attach -n $child -- git -C / checkout -b $child 2>&1`
  check_status "New child container branch \"$child\" created" "$?"
}


# takes container name as arg $1
# returns the uuid of the last commit
function git_add_commit { 
  local lxc="$1"

  if [ -z `lxc-ls --running $lxc` ]; then
    lxc-start -d -n $lxc
  fi

  lxc-wait -n $lxc -s RUNNING
  o=`lxc-attach -n $lxc \
    -- git -C / commit -a -m \
    "commit changes for $lxc template" 2>&1 > /dev/null`
  lxc-attach -n $lxc \
    -- git -C / log | grep commit | head -n 1 | awk '{print $2}'
}


function git_remote_push {
  local lxc="$1"
  
  if [ -z `lxc-ls --running $lxc` ]; then
    lxc-start -d -n $lxc
  fi

  lxc-wait -n $lxc -s RUNNING
  lxc-attach -n $lxc -- git -C / remote 'set-url' upstream $SUBUTAI_SITE_GIT
  lxc-attach -n $lxc -- git -C / push -u upstream $lxc
}


 
