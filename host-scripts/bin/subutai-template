#!/bin/bash

. /etc/subutai/config

container=$1

function usage {
  echo -----------------------------------------------------------------------
  echo Usage: Creates and registers a template from an existing container
  echo
  echo "	"subutai-template container
  echo
  echo -----------------------------------------------------------------------
}

# Also sources bsfl
. /etc/subutai/functionz


# Plan for creating a template from a container
# -----------------------------------------------------------------------------
# (1) perform sanity checks first
#     - container MUST exist
#     - container MUST NOT have a 'template' snapshot
#     - container name MUST NOT be in the template registry
#     - container MUST be in the STOPPED state (may change later with hooks):
#       might want to stop the container if it is in the RUNNING state
#       might need the container running to calculate package changes
#     - container parent MUST be present in the template registry
# (2) commit config point changes and push to git as new branch from parent
# (3) take 'template' snapshots on all filesystems, and apply "keep" hold
# (4) generate delta images of all filesystems: 'created' -> 'template'
# (5) generate the package change information
# (6) generate the tsar file from git differential, deltas, and package info
# (7) send tsar file to subutai server

# (1) perform some sanity checks

# (2) git operations

