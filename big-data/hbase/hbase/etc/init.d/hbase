#!/bin/bash

hbase=hbase-0.98.3
hbaseConf="/etc/hbase/"

. /lib/lsb/init-functions
. /etc/hbase/hbase-env.sh

if [ "x" != "x$HBASE_PID_DIR" ]; then
  pid_dir=$HBASE_PID_DIR
else
  pid_dir="/tmp"
fi  

if [ ! -f "$pid_dir/*-regionserver.pid" ]; then
  pidRegion=`ls -alt $pid_dir | grep hbase-.*-regionserver.pid | head -1 | awk '{print $9}'`
fi

if [ ! -f "$pid_dir/*-zookeeper.pid" ]; then
  pidZookeeper=`ls -alt $pid_dir | grep hbase-.*-zookeeper.pid | head -1 | awk '{print $9}'`
fi

if [ ! -f "$pid_dir/*-master.pid" ]; then
  pidMaster=`ls -alt $pid_dir | grep hbase-.*-master.pid | head -1 | awk '{print $9}'`
fi

CMD_PATT="hbase"

check_process(){
  pid_file=$2
  role=$1
  if [ -f $pid_dir/$pid_file ] && [ "x$pid_file" != "x" ]; then
    pid=`cat $pid_dir/$pid_file`
    if grep -Eq "$CMD_PATT" "/proc/$pid/cmdline"; then
      log_success_msg "$role is running (pid:$pid)"
      return 0
    else
      log_failure_msg "could not access pidfile"
      return 1
    fi
  else
    log_success_msg "$role is NOT running"
    return 0
  fi
}


is_running(){
  pid_file_name=$1
  if [ -f $pid_dir/$pid_file_name ] && [ "x$pid_file_name" != "x" ]; then
    pid=`cat $pid_dir/$pid_file_name`
    if grep -Eq "$CMD_PATT" "/proc/$pid/cmdline"; then
      return 1;
    fi
  fi
  return 0 
}


kill_service(){
  pid_file=$1
  is_running $pid_file
  stat=$? 
  if [ "$stat" == "1" ]; then
    start-stop-daemon -K -p "$pid_dir/$pid_file" -R TERM/30/KILL/5 >/dev/null
  fi
  if [ -f $pid_dir/$pid_file ];then
    rm $pid_dir/$pid_file
  fi
}

case "$1" in
  start)
    start-stop-daemon --start --exec /opt/$hbase/bin/start-hbase.sh
  ;;

  stop)
    #start-stop-daemon --start --exec /opt/$hbase/bin/stop-hbase.sh
    /opt/$hbase/bin/hbase-daemons.sh stop zookeeper
    /opt/$hbase/bin/hbase-daemons.sh stop regionserver
    /opt/$hbase/bin/hbase-daemon.sh stop master
    /opt/$hbase/bin/hbase-daemons.sh stop master-backup
  ;;
  restart)
    $0 stop
    $0 start
  ;;

  status)
    check_process "HMaster" $pidMaster
    check_process "HRegionServer" $pidRegion
    check_process "HQuorumPeer" $pidZookeeper
    ;;
  kill)
    kill_service $pidMaster
    kill_service $pidZookeeper
    kill_service $pidRegion
    echo "HBase services are stopped and pid files are deleted"
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|status|kill}"
    exit 1
esac

