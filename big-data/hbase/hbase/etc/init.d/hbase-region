#!/bin/bash

hbase=hbase-0.98.3
hbaseConf="/etc/hbase/"

. /etc/hbase/hbase-env.sh
. /lib/lsb/init-functions

if [ "x" != "x$HBASE_PID_DIR" ]; then
  pid_dir=$HBASE_PID_DIR
else
  pid_dir="/tmp"
fi


if [ ! -f "/tmp/*-regionserver.pid" ]; then
  pidRegion=`ls -alt /tmp | grep hbase-.*-regionserver.pid | head -1 | awk '{print $9}'`
fi

is_running(){
  pid_file_name=$1
  if [ -f $pid_dir/$pid_file_name ] && [ "x$pid_file_name" != "x" ]; then
    pid=`cat $pid_dir/$pid_file_name`
    if grep -Eq "$CMD_PATT" "/proc/$pid/cmdline"; then
      return 1;
    fi
  fi
  return 0
}

check_process(){
  if [ $# == 1 ]; then
    role=$1
  elif [ $# == 2 ]; then
    pid_file=$1
    role=$2
  fi
  if [ -f $pid_dir/$pid_file ] && [ "x$pid_file" != "x" ]; then
    pid=`cat $pid_dir/$pid_file`
    if grep -Eq "$CMD_PATT" "/proc/$pid/cmdline"; then
      log_success_msg "$role is running (pid:$pid)"
      return 0
    else
      log_failure_msg "could not access pidfile"
      return 1
    fi
  else
    log_success_msg "$role is NOT running"
    return 0
  fi
}

kill_service(){
  pid_file=$1
  is_running $pid_file
  stat=$?
  if [ "$stat" == "1" ]; then
    start-stop-daemon -K -p "$pid_dir/$pid_file" -R TERM/30/KILL/5 >/dev/null
  fi
  if [ -f $pid_dir/$pid_file ];then
    rm $pid_dir/$pid_file
  fi
}

case "$1" in
  start)
    /opt/$hbase/bin/hbase-daemons.sh start regionserver
    ;;
  stop)
    /opt/$hbase/bin/hbase-daemons.sh stop regionserver
    #pid=`cat /tmp/$pidRegion`
    #echo "Stopping HQuorumPeer with pid $pid"
    #start-stop-daemon -K -p "$pidZookeeper" -R TERM/30/KILL/5 >/dev/null 
    ;;
  restart)
    $0 stop
    $0 start
    ;;
  status)
    check_process $pidRegion "HRegionServer"
    ;;
  kill)
    kill_service $pidRegion
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|status|kill}"
    exit 1
esac
