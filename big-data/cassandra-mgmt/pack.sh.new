#!/bin/bash
set -e

BASE=$(pwd)
sh -c 'cd $BASE'
echo $BASE
cd ../workspace
SOURCE="/var/lib/jenkins/jobs/master.get_branch_repo/workspace/big-data/cassandra-mgmt/cassandra-mgmt"
TARGET="/var/lib/jenkins/Automation/Bigdata/cassandra-mgmt"
kskssql="/var/lib/jenkins/jobs/master.get_branch_repo/workspace/keyspace"
echo $SOURCE
echo $TARGET
echo $kskssql
cd $BASE

LXCSOURCE="/var/lib/lxc"
pattern="cassandra-mgmt"

cd $LXCSOURCE
pwd

containerStatus=$(lxc-ls --fancy | grep $pattern | cut -d' ' -f3)
echo "ContainerStatus: "$containerStatus
runningStatus="RUNNING"

if [ $containerStatus = $runningStatus ]; then
	echo $pattern " is running.."
	sudo lxc-stop -n $pattern
	sudo lxc-destroy -n $pattern
	sudo lxc-create -t ubuntu -n $pattern
else
        echo $pattern " is stopped.."
        sudo lxc-destroy -n $pattern
        sudo lxc-create -t ubuntu -n $pattern

fi

#Editing lxc package
cp $pattern/rootfs/etc/network/interfaces $pattern/rootfs/etc/network/interfaces.org
#backup interfaces file
#Giving static lxcbro ip address : 172.16.8.101
echo "" > $pattern/rootfs/etc/network/interfaces
echo "auto lo" >> $pattern/rootfs/etc/network/interfaces
echo "iface lo inet loopback\n" >> $pattern/rootfs/etc/network/interfaces
echo "auto eth0" >> $pattern/rootfs/etc/network/interfaces
echo "iface eth0 inet static" >> $pattern/rootfs/etc/network/interfaces
echo "address 172.16.8.101" >> $pattern/rootfs/etc/network/interfaces
echo "netmask 255.255.248.0" >> $pattern/rootfs/etc/network/interfaces
echo "gateway 172.16.8.1" >> $pattern/rootfs/etc/network/interfaces
echo "dns-nameservers 8.8.8.8" >> $pattern/rootfs/etc/network/interfaces

BRIDGE="br0"
sed -i 's/lxcbr0/'"$BRIDGE"'/g' $LXCSOURCE/$pattern/config

#Copying logstash&jmxtrans deb files.
cp $BASE/repo/ksks-cassandra-mgmt-1.0.8-amd64.deb $LXCSOURCE/$pattern/rootfs/root/
cp $kskssql/kiskis.sql $LXCSOURCE/$pattern/rootfs/root/

#start base-container
sudo lxc-start -n $pattern -d
sleep 10
ssh-keygen -f "/root/.ssh/known_hosts" -R 172.16.8.101
#Read Root Passwords for Template LXC
cd $BASE
passwd=$(cat password.dat)
/$BASE/presettings.exp.new 172.16.8.101 ubuntu ubuntu $passwd
/$BASE/postsettings.exp.new 172.16.8.101 root $passwd

#removing cassandra-mgmt and kiskis.sql
rm $LXCSOURCE/$pattern/rootfs/root/ksks-cassandra-mgmt-1.0.8-amd64.deb
rm $LXCSOURCE/$pattern/rootfs/root/kiskis.sql

cd $LXCSOURCE

#closing cassandra-mgmt
sudo lxc-stop -n $pattern
#updating original interfaces file
mv $pattern/rootfs/etc/network/interfaces.org $pattern/rootfs/etc/network/interfaces

cd $BASE
fileName=`ls | awk '{print $1}' | head -1`
echo "FILENAME: " $fileName

cp -a -p $LXCSOURCE/$pattern/rootfs/var/lib/cassandra $BASE/$fileName/var/lib/

if ls *.deb ; then
        rm  *.deb
fi

cd $BASE
cp -a $SOURCE/DEBIAN $BASE/$fileName/
cp -a $SOURCE/etc $BASE/$fileName/
cp -a $SOURCE/opt $BASE/$fileName/

lineNumberVersion=$(sed -n '/Version:/=' $fileName/DEBIAN/control)
lineNumberPackage=$(sed -n '/Package:/=' $fileName/DEBIAN/control)
lineVersion=$(sed $lineNumberVersion!d $fileName/DEBIAN/control)
linePackage=$(sed $lineNumberPackage!d $fileName/DEBIAN/control)

version=$(echo $lineVersion | awk -F":" '{split($2,a," ");print a[1]}')
package=$(echo $linePackage | awk -F":" '{split($2,a," ");print a[1]}')
echo $version
echo $package

versionFirst=$(echo $version | awk -F"." '{print $1}')
versionSecond=$(echo $version | awk -F"." '{print $2}')
versionThird=$(echo $version | awk -F"." '{print $3}')

echo $versionFirst
echo $versionSecond
echo $versionThird

updatedVersion=$(echo `expr $versionThird + 1`)
updatedRelease=$versionFirst.$versionSecond.$versionThird
replaceVersion="Version: $updatedRelease"
sed -i $fileName/DEBIAN/control -e $lineNumberVersion's!.*!'"$replaceVersion"'!'
packageName=$package-$updatedRelease"-amd64"
echo $packageName

if [ "$fileName" != "$packageName" ] ;then
echo "different!!"
mv $fileName $packageName
fi

find ./$packageName -name "*~" -print0 | xargs -0 rm -rf
rm $packageName/DEBIAN/md5sums
md5sum `find ./$packageName -type f | awk '/.\//{ print substr($0, 3) }'` >> $packageName/DEBIAN/md5sums

chmod -R 755 $packageName/DEBIAN/
dpkg-deb -z8 -Zgzip --build $packageName/

chown jenkins:jenkins $packageName/DEBIAN/md5sums
chmod -R 755 $packageName/DEBIAN/md5sums
chown jenkins:jenkins $BASE/*.deb
chmod -R 755 $BASE/*.deb

sudo rm -rf $packageName/var/lib/*
cp $packageName".deb" $TARGET/
