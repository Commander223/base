#!/bin/bash
# Starts and stops derby database.
if [[ "x$DERBY_HOME" == "x" ]];
then
	DERBY_HOME="/opt/db-derby-10.4.2.0-bin"
fi
export DERBY_HOME
. /etc/profile

NAME=derby
PIDFILE=/var/run/$NAME/$NAME.pid
DESC="Derby Server"
CMD_PATT="derby.+NetworkServerControl"
. /lib/lsb/init-functions

is_running()
{
    if [ -f $PIDFILE ]; then
        pid=`cat $PIDFILE`
        grep -Eq "$CMD_PATT" "/proc/$pid/cmdline" 2>/dev/null && return 0
        return 1
    fi
    return 3
}

case "$1" in
start)
        is_running
        stat=$?
        case "$stat" in
                0) echo $DESC "is already running..." ;;
                1) echo "Could not access pidfile for $DESC" ;;
                *)
                echo "Starting "$DESC" ... "
                [ -e `dirname "$PIDFILE"` ] || \
                        install -d -m755 `dirname $PIDFILE`
        	DAEMON=$DERBY_HOME"/bin/startNetworkServer"
        	ARGS=" -h 0.0.0.0 -p 50000"
		start-stop-daemon --start --make-pidfile --background --chdir /opt/db-derby-10.4.2.0-bin/data --pidfile  "$PIDFILE" --exec "${DAEMON}" -- ${ARGS}
        ;;
        esac
;;

stop)
        is_running
        stat=$?
        case "$stat" in
        0)
                echo "Stopping" $DESC
                echo "PID: " $PIDFILE
                start-stop-daemon -K -p "$PIDFILE" -R TERM/30/KILL/5 >/dev/null
                rm -f "$PIDFILE";;
        1) echo "Could not access pidfile for $DESC" ;;
        *) echo $DESC" is not running..." ;;
        esac
;;

restart)
        $0 stop
        $0 start
;;

status)
        is_running
        stat=$?
        case "$stat" in
                0) log_success_msg "$DESC is running" ;;
                1) log_failure_msg "could not access pidfile for $DESC" ;;
                *) log_success_msg "$DESC is not running" ;;
        esac
        exit "$stat"
;;
kill)
	start-stop-daemon -K -p "$PIDFILE" -R TERM/30/KILL/5 >/dev/null
	rm -f "$PIDFILE"
	echo $DESC "is killed..."
;;
*)
        echo "Usage: $0 {start|stop|restart|status|kill}"
        exit 1
esac
