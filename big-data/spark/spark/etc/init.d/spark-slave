#!/bin/sh
# Starts and stops spark.

sparkVer="spark-0.9.1"
if [ -d "/var/run/spark/" ]; then
	pidWorker=`ls -alt /var/run/spark/ | grep spark-.*.Worker-.*.pid | head -1 | awk -F " " '{print $9}'`
fi

pidFile=/var/run/spark/$pidWorker
PIDDIR=/var/run/spark
sbin=/opt/$sparkVer/sbin
DESC="Spark Worker"
CMD_PATT="spark"
. /lib/lsb/init-functions

export SPARK_PID_DIR=$PIDDIR

CMD_PATT="spark"
is_slave_running()
{
    if [ -f $pidFile ] && [ "x$pidFile" != "x" ]; then
        pid=`cat $pidFile`
        grep -Eq "$CMD_PATT" "/proc/$pid/cmdline" 2>/dev/null && return 1 
        return 0
    fi
    return 2
}

case "$1" in
start)
	$sbin/start-slave.sh ;;
stop)
	is_slave_running
	stat=$?
 	case "$stat" in
            0)
                 echo "Spark Worker is NOT running." ;;
            1)
	        pidW=`cat $pidFile`
                echo "Stopping Spark Worker with pid $pidW."
                start-stop-daemon -K -p "$pidFile" -R TERM/30/KILL/5 >/dev/null;;
	    2)
		echo "Pid file does not exists in \"/var/run/spark/\" directory." ;;
            *)
                echo "Something went wrong." ;;
        esac ;;
restart)
        $0 stop
        $0 start ;;
status)
        is_slave_running 
        stat=$?
	case "$stat" in 
        	0)
	           echo "Spark Worker is NOT running." ;;
		1)
                   slavePid=`cat $pidFile`
                   echo "Spark Worker is running with pid $slavePid." ;;
		2)
		   echo "Pid file does not exists in \"/var/run/spark/\" directory.";;
		*)
	           echo "Something went wrong." ;;
	esac ;;
kill)
	is_slave_running
	stat=$?
	case "$stat" in
		0)
		  echo "No Spark Worker to kill." 
                  echo "Removing pidfile : $pidFile." 
                  rm $pidFile ;;

		1)
        	  pidW=`cat $pidFile`
                  echo "Stopping Spark Worker with pid $pidW."
                  start-stop-daemon -K -p "$pidFile" -R TERM/30/KILL/5 >/dev/null
	          echo "Removing pidfile : $pidFile." 
		  rm $pidFile ;;
		2)
		  echo "Pid file does not exists in \"/var/run/spark/\" directory." ;;
		*)
		  echo "Something went wrong." ;; 
	esac ;;
*)
        echo "Usage: $0 {start|stop|restart|status|kill}"
        exit 1
esac
