package org.safehaus.subutai.core.environment.ui.forms;


import org.safehaus.subutai.core.environment.ui.manage.EnvironmentBuildWizard;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;


public class ApplyTopologyPanel extends CustomComponent
{

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,
    "movingGuides":false,"snappingDistance":10} */

    @AutoGenerated
    private AbsoluteLayout mainLayout;
    @AutoGenerated
    private Button cancelButton;
    @AutoGenerated
    private Button nextButton;
    @AutoGenerated
    private EnvironmentBuildWizard environmentBuildWizard;


    /**
     * The constructor should first build the main layout, set the composition root and then do any custom
     * initialization.
     *
     * The constructor will not be automatically regenerated by the visual editor.
     */
    public ApplyTopologyPanel( EnvironmentBuildWizard environmentBuildWizard )
    {
        buildMainLayout();
        setCompositionRoot( mainLayout );
        this.environmentBuildWizard = environmentBuildWizard;


        // TODO add user code here
    }


    //    private ComboBox getPeersCombo()


    @AutoGenerated
    private AbsoluteLayout buildMainLayout()
    {
        // common part: create layout
        mainLayout = new AbsoluteLayout();
        mainLayout.setImmediate( false );
        mainLayout.setWidth( "100%" );
        mainLayout.setHeight( "100%" );

        // top-level component properties
        setWidth( "100.0%" );
        setHeight( "100.0%" );

        // nextButton
        nextButton = createNextButton();
        mainLayout.addComponent( nextButton, "top:300.0px;left:20.0px;" );

        // cancelButton
        cancelButton = createCancelButton();
        mainLayout.addComponent( cancelButton, "top:300.0px;left:140.0px;" );

        return mainLayout;
    }


    private Button createNextButton()
    {
        Button nextButton = new Button();
        nextButton.setCaption( "Build" );
        nextButton.setImmediate( true );
        nextButton.setWidth( "-1px" );
        nextButton.setHeight( "-1px" );
        nextButton.addClickListener( new Button.ClickListener()
        {
            @Override
            public void buttonClick( final Button.ClickEvent clickEvent )
            {
                environmentBuildWizard.close();
            }
        } );
        return nextButton;
    }


    private Button createCancelButton()
    {
        Button cancelButton = new Button();
        cancelButton.setCaption( "Cancel" );
        cancelButton.setImmediate( true );
        cancelButton.setWidth( "-1px" );
        cancelButton.setHeight( "-1px" );

        cancelButton.addClickListener( new Button.ClickListener()
        {
            @Override
            public void buttonClick( final Button.ClickEvent clickEvent )
            {
                environmentBuildWizard.close();
            }
        } );


        return cancelButton;
    }
}