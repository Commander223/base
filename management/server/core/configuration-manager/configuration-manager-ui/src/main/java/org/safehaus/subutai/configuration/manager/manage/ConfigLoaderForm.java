package org.safehaus.subutai.configuration.manager.manage;


import org.safehaus.subutai.configuration.manager.api.ConfigManager;
import org.safehaus.subutai.configuration.manager.api.ConfigTypeEnum;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonObject;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;


public class ConfigLoaderForm extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,
    "movingGuides":false,"snappingDistance":10} */

    @AutoGenerated
    private AbsoluteLayout mainLayout;
    @AutoGenerated
    private VerticalLayout verticalLayout_1;
    @AutoGenerated
    private HorizontalLayout horizontalLayout_2;
//    @AutoGenerated
//    private TextArea textArea_2;
    @AutoGenerated
    private TextArea textArea_1;
    @AutoGenerated
    private HorizontalLayout horizontalLayout_1;
    @AutoGenerated
    private Button button_1;
    @AutoGenerated
    private Button buttonInject;
    @AutoGenerated
    private TextField textField_1;
    @AutoGenerated
    private TextField textFieldHostname;
    @AutoGenerated
    private TextField textFieldPath;
    @AutoGenerated
    private ComboBox comboBox_2;
    private ConfigManager configManager;


    /**
     * The constructor should first build the main layout, set the composition root and then do any custom
     * initialization.
     *
     * The constructor will not be automatically regenerated by the visual editor.
     */
    public ConfigLoaderForm( ConfigManager configManager ) {
        this.configManager = configManager;
        buildMainLayout();
        setCompositionRoot( mainLayout );

        // TODO add user code here
    }


    @AutoGenerated
    private AbsoluteLayout buildMainLayout() {
        // common part: create layout
        mainLayout = new AbsoluteLayout();
        mainLayout.setImmediate( false );
        mainLayout.setWidth( "100%" );
        mainLayout.setHeight( "100%" );

        // top-level component properties
        setWidth( "100.0%" );
        setHeight( "100.0%" );

        // verticalLayout_1
        verticalLayout_1 = buildVerticalLayout_1();
        mainLayout.addComponent( verticalLayout_1, "top:2.0px;right:12.0px;bottom:98.0px;left:0.0px;" );

        return mainLayout;
    }


    @AutoGenerated
    private VerticalLayout buildVerticalLayout_1() {
        // common part: create layout
        verticalLayout_1 = new VerticalLayout();
        verticalLayout_1.setImmediate( false );
        verticalLayout_1.setWidth( "100.0%" );
        verticalLayout_1.setHeight( "100.0%" );
        verticalLayout_1.setMargin( false );

        // horizontalLayout_1
        horizontalLayout_1 = buildHorizontalLayout_1();
        verticalLayout_1.addComponent( horizontalLayout_1 );

        // horizontalLayout_2
        horizontalLayout_2 = buildHorizontalLayout_2();
        verticalLayout_1.addComponent( horizontalLayout_2 );
        verticalLayout_1.setExpandRatio( horizontalLayout_2, 1.0f );

        return verticalLayout_1;
    }


    @AutoGenerated
    private HorizontalLayout buildHorizontalLayout_1() {
        // common part: create layout
        horizontalLayout_1 = new HorizontalLayout();
        horizontalLayout_1.setImmediate( false );
        horizontalLayout_1.setWidth( "-1px" );
        horizontalLayout_1.setHeight( "-1px" );
        horizontalLayout_1.setMargin( false );

        // comboBox_2
        comboBox_2 = new ComboBox();
        comboBox_2.setImmediate( false );
        comboBox_2.setWidth( "-1px" );
        comboBox_2.setHeight( "-1px" );
        comboBox_2.setNullSelectionAllowed( false );
        comboBox_2.setTextInputAllowed( false );
        for ( ConfigTypeEnum anEnum : ConfigTypeEnum.values() ) {
            comboBox_2.addItem( anEnum );
        }
        horizontalLayout_1.addComponent( comboBox_2 );

        // textField_1
        textField_1 = new TextField();
        textField_1.setImmediate( false );
        textField_1.setWidth( "-1px" );
        textField_1.setHeight( "-1px" );
        horizontalLayout_1.addComponent( textField_1 );

        // button_1
        button_1 = new ConvertToJsonButton( this.configManager );
        buttonInject = new InjectIntoLxcButton( this.configManager );

        horizontalLayout_1.addComponent( button_1 );

        textFieldHostname = new TextField();
        textFieldHostname.setCaption( "Hostname" );
        textFieldHostname.setImmediate( false );
        textFieldHostname.setWidth( "-1px" );
        textFieldHostname.setHeight( "-1px" );
        horizontalLayout_1.addComponent( textFieldHostname );

        textFieldPath = new TextField();
        textFieldPath.setCaption( "Path" );
        textFieldPath.setImmediate( false );
        textFieldPath.setWidth( "-1px" );
        textFieldPath.setHeight( "-1px" );
        horizontalLayout_1.addComponent( textFieldPath );

        horizontalLayout_1.addComponent( buttonInject );

        return horizontalLayout_1;
    }


    private class ConvertToJsonButton extends Button {

        private ConvertToJsonButton( final ConfigManager configManager ) {
            setCaption( "Convert to JSON" );
            setImmediate( true );
            setWidth( "-1px" );
            setHeight( "-1px" );
            addClickListener( new Button.ClickListener() {
                @Override
                public void buttonClick( final Button.ClickEvent clickEvent ) {
                    String configPath = textField_1.getValue();
                    ConfigTypeEnum typeEnum = ( ConfigTypeEnum ) comboBox_2.getValue();

                    JsonObject configStr = configManager.getJsonObjectFromResources( configPath, typeEnum );
                    Gson gson = new GsonBuilder().setPrettyPrinting().create();
                    textArea_1.setValue( gson.toJson( configStr ) );
                }
            } );
        }
    }


    private class InjectIntoLxcButton extends Button {

        private InjectIntoLxcButton( final ConfigManager configManager ) {
            setCaption( "Inject JSON" );
            setImmediate( true );
            setWidth( "-1px" );
            setHeight( "-1px" );
            addClickListener( new Button.ClickListener() {
                @Override
                public void buttonClick( final Button.ClickEvent clickEvent ) {
                    String hostname = textFieldHostname.getValue().trim();
                    String configPath = textFieldPath.getValue().trim();
                    ConfigTypeEnum typeEnum = ( ConfigTypeEnum ) comboBox_2.getValue();
                    String config = textArea_1.getValue();

                    Boolean result = configManager.injectConfiguration( hostname, configPath, config, typeEnum );
//                    textArea_2.setValue( result.toString() );
                }
            } );
        }
    }


    @AutoGenerated
    private HorizontalLayout buildHorizontalLayout_2() {
        // common part: create layout
        horizontalLayout_2 = new HorizontalLayout();
        horizontalLayout_2.setImmediate( false );
        horizontalLayout_2.setWidth( "100.0%" );
        horizontalLayout_2.setHeight( "100.0%" );
        horizontalLayout_2.setMargin( false );

        // textArea_1
        textArea_1 = new TextArea();
        textArea_1.setImmediate( false );
        textArea_1.setWidth( "100.0%" );
        textArea_1.setHeight( "100.0%" );
        textArea_1.setValue( "area 1" );
        horizontalLayout_2.addComponent( textArea_1 );
        horizontalLayout_2.setExpandRatio( textArea_1, 1.0f );

        // textArea_2
//        textArea_2 = new TextArea();
//        textArea_2.setImmediate( false );
//        textArea_2.setWidth( "100.0%" );
//        textArea_2.setHeight( "100.0%" );
//        horizontalLayout_2.addComponent( textArea_2 );
//        horizontalLayout_2.setExpandRatio( textArea_2, 1.0f );

        return horizontalLayout_2;
    }
}
