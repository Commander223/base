#!/bin/bash


function quota_usage {
  echo -----------------------------------------------------------------------
  echo Usage: Quota management of containers.
  echo
  echo "        "subutai \[-qh\] quota container quota_parameter \[quota_value\] \[additional_parameters\]
  echo "           "quota_parameters:
  echo "                             "memory.quota
  echo "                             "cpu.cpus
  echo "                             "hdd.quota
  echo -----------------------------------------------------------------------
}

function quota {
  OPTIND=0
  if [ "$1" == "quota" ]; then
    shift
  fi

  local container=$1
  local resource_parameter=$2
  local parameter_value=$3
  lxc_assert "$container" "`quota_usage`"

  if [[ -z $resource_parameter ]]; then
    msg_error "Resource parameter not provided. Aborting..."
    exit 1;
  fi

  if [ -z $parameter_value ]; then
    case $resource_parameter in
      "memory.quota" )
        lxc_get_memory $container
      ;;
      "cpu.cpus")
        lxc_get_cpus $container
      ;;
      "hdd.quota")
        fs_get_quota $container
      ;;
      *)
	msg_error "$resource_parameter is not a supported parameter! Aborting.."
        exit 1
    esac
  else
    case $resource_parameter in
      "memory.quota" )
        lxc_set_memory $container $parameter_value
        ;;
      "cpu.cpus" )
        lxc_set_cpus $container $parameter_value
      ;;
      "hdd.quota")
        local directory=$4
        fs_set_quota $container $directory $parameter_value
      ;;
      *)
        msg_error "$resource_parameter is not a supported parameter! Aborting.."
        exit 1
    esac
  fi
}


function quota_description {
  echo sets and gets container quotas;
}
