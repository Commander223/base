#!/bin/bash



function clone_usage {
  echo -----------------------------------------------------------------------
  echo Usage: Clone a new container instance from a temlate.
  echo
  echo "        "subutai \[-qh\] clone parent child \[-e\|-m\]
  echo "          "parameters:
  echo "                    "e -- set environment id for container
  echo "                    "m -- starts monitoring of container
  echo
  echo -----------------------------------------------------------------------
}


function clone {
  if [ "`is_system_locked`" == "true" ]
  then
     msg_error "System locked by a subutai process"
     exit 1
  fi

  local parent="$1"
  local child="$2"

  # Check that parent exists
  lxc_assert "$parent" "`usage`"
  # Check that container name is legal and it does not exist
  lxc_assert_name $child
  lxc_assert_no $child

  config=/var/lib/lxc/$child/config

  if [ "`are_containers_readable $parent $child`" == "true" ]
  then
     msg_error "Container(s) locked by a subutai process"
     exit 1
  fi

  OPTIND=0
  if [ "$2" == $child ]; then
    shift
    shift
  fi

  #getting environmentId using getopts
  local environmentId=""
  local monitor_enabled="false"
  shift_amount=0;
  while getopts ":e:m" opt; do
    case $opt in
      e)
        environmentId=$OPTARG;
        ;;
      m)
	monitor_enabled="true"
	;;
      \?)
        msg_error "Unrecognized option -$OPTARG"
        exit 1
        ;;
      :)
        msg_error "Option -$OPTARG requires an argument." >&2
        exit 1
    esac
    shift_amount=$(($shift_amount + 1))
  done

  lock_container_write $parent $child
  if [ $? != 0 ]; then msg_error "Containers cannot be locked!"; exit 1; fi

  # NOTE: underscore for our own lxc clone impl not supplied lxc-clone
  if [ -z "$environmentId" ]; then
     environmentId="null"
  fi

  #cloning operation is starting..
  lxc_clone $parent $child $environmentId "`usage`"

  ovs_configure_lxc $child
  git_child_branch $child
  lxc_install_agent $child
  msg_ok "Successfully cloned $child container from $parent"
  if [ $monitor_enabled == "true" ]; then
    create_rrd "$child"
  fi
  unlock_container_write $child
  if [ $? != 0 ]; then msg_error "Container(s) cannot be unlocked!"; exit 1; fi
}


function clone_description {
  echo clones an instance container from a template
}

