#!/bin/bash

get_last_key_id_in_keyring(){
  echo `gpg -k | grep "^pub" | tail -1 | grep 'pub' | cut -d "/" -f2 | cut -d " " -f1`
}

# check if given email is valid
assert_email_validity(){
  email=$1
  if [ -z $email ];then
     echo "Empty email string !"
     exit 1
  fi
  echo "$email" | grep '^[a-zA-Z0-9]*@[a-zA-Z0-9]*\.[a-zA-Z0-9]*$' > /dev/null 2>&1
  if [ ! $? -eq 0 ]; then
    echo "Invalid email address !"
    exit 1
  fi
}

generate(){
  if [ ! $# == 2 ];then
    echo "GPG KEY NOT PRODUCED! LACK OF ARGUMENT!"
    exit 1
  fi
  realName=$1
  email=$2
  assert_email_validity $email
  #create key generation script
  scriptName=".key_$RANDOM"
  cat >$scriptName<<EOF
    #%echo Generating a Subutai Environment key
    Key-Type: RSA
    Key-Length: 2048
    Subkey-Type: RSA
    Subkey-Length: 2048
    Subkey-Usage: encrypt sign auth
    Name-Real: $realName
    Name-Comment: subutai environment key
    Name-Email: $email
    Expire-Date: 1y
    %no-protection
    %commit
    #%echo DONE
EOF
    gpg --batch --gen-key $scriptName
    rm $scriptName
}

realName="$1"
email="$2"

generate $realName $email
pubKey=`gpg --list-keys | grep pub | awk '{print $2}' | awk -F"/" '{print $2}'`
echo $pubKey
sleep 3
gpg --keyserver gw.intra.lan --send-keys $pubKey
